<ui:UXML xmlns:ui="UnityEngine.UIElements" xmlns:uie="UnityEditor.UIElements" editor-extension-mode="True">
    <Style src="project://database/Packages/com.tiogiras.megapint/Editor/Resources/User%20Interface/MegaPint.uss?fileID=7433441132597879392&amp;guid=2f2b50e0e132e3a4989e6dbb646711fa&amp;type=3#MegaPint" />
    <ui:Label tabindex="-1" text="Getting Started" parse-escape-sequences="true" display-tooltip-when-elided="true" style="margin-top: 5px; color: rgb(209, 0, 114); font-size: 16px; -unity-font-style: bold; -unity-font: resource(&apos;RobotoMono-VariableFont_wght&apos;); -unity-font-definition: initial; margin-left: 10px;" />
    <ui:GroupBox style="margin-left: 20px; margin-right: 0; margin-top: 0; margin-bottom: 0; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; -unity-font-definition: initial; -unity-font: resource(&apos;RobotoMono-VariableFont_wght&apos;);">
        <ui:Foldout text="Creating a validatable monobehaviour &lt;color=&quot;orange&quot;&gt; [Code]" value="false" style="-unity-font-style: bold; color: rgb(210, 210, 210); font-size: 12px;">
            <ui:GroupBox style="margin-left: 0; margin-right: 0; margin-top: 5px; margin-bottom: 20px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; -unity-font-style: normal;">
                <ui:Label text="In order to create a Validatable MonoBehaviour your class must inherit from ValidatableMonoBehaviour rather than MonoBehaviour." display-tooltip-when-elided="true" style="white-space: normal;" />
                <ui:Label text="&lt;color=&quot;orange&quot;&gt;public class&lt;/color&gt; Validatable : ValidatableMonoBehaviour&#10;{&#10;&#10;}" display-tooltip-when-elided="true" style="white-space: normal; background-color: rgb(37, 37, 37); margin-top: 5px; margin-left: 0; margin-bottom: 5px; width: 413px;" />
                <ui:Label text="When using assemblies you must import the following assembly to access the ValidatableMonoBehaviour class.&#10;&#10;&lt;b&gt;tiogiras.megapint-validators.Runtime.Scripts&lt;/b&gt;" display-tooltip-when-elided="true" style="white-space: normal; margin-bottom: 5px;" />
                <ui:IMGUIContainer style="background-image: none; height: 2px; margin-left: 4px; margin-right: 4px; margin-top: 4px; margin-bottom: 4px; border-top-left-radius: 1px; border-bottom-left-radius: 1px; border-top-right-radius: 1px; border-bottom-right-radius: 1px; background-color: rgb(88, 88, 88);" />
            </ui:GroupBox>
        </ui:Foldout>
        <ui:Foldout text="Creating requirements &lt;color=&quot;orange&quot;&gt; [Code]" value="false" focusable="false" style="-unity-font-style: bold; color: rgb(210, 210, 210); font-size: 12px;">
            <ui:GroupBox style="margin-left: 0; margin-right: 0; margin-top: 5px; margin-bottom: 20px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; -unity-font-style: normal;">
                <ui:Label text="Basics" display-tooltip-when-elided="true" style="white-space: normal; -unity-font-style: bold; font-size: 14px; color: rgba(210, 210, 210, 0.59);" />
                <ui:Label text="Requirements are used to validate the given gameObject or monoBehaviour. The requirement contains possible settings as well as the logic for validation and fixing the issue." display-tooltip-when-elided="true" style="white-space: normal; margin-top: 5px; width: 475px;" />
                <ui:Label text="In order to create a custom requirement your class needs to inherit from the ScriptableValidationRequirement and implement the given methods. This script is found in the same assembly as the validatableMonoBehaviour." display-tooltip-when-elided="true" style="white-space: normal; margin-top: 5px; width: 475px;" />
                <ui:Label text="&lt;color=&quot;orange&quot;&gt;public class&lt;/color&gt; Requirement : ScriptableValidationRequirement&#10;{&#10;    &lt;color=&quot;orange&quot;&gt;protected override void&lt;/color&gt; OnInitialization()&#10;    {&#10;    }&#10;&#10;    &lt;color=&quot;orange&quot;&gt;protected override void&lt;/color&gt; Validate(&lt;color=&quot;purple&quot;&gt;GameObject&lt;/color&gt; gameObject)&#10;    {&#10;    }&#10;}" display-tooltip-when-elided="true" style="white-space: normal; margin-top: 5px; background-color: rgb(37, 37, 37); width: 475px;" />
                <ui:Label text="The guide will create a requirement that enforces the gameObject to have a given active state, to ensure all objects are enabled when building the game and all debug objects are disabled." display-tooltip-when-elided="true" style="white-space: normal; margin-top: 15px; width: 475px;" />
                <ui:Label text="OnInitialization()" display-tooltip-when-elided="true" style="white-space: normal; -unity-font-style: bold; font-size: 14px; color: rgba(210, 210, 210, 0.59); margin-top: 15px;" />
                <ui:Label text="OnInitialization is called the first time the monoBehaviour is validated with this given requirement. You can use this method to give variables their initial values." display-tooltip-when-elided="true" style="white-space: normal; margin-top: 5px; width: 475px;" />
                <ui:Label text="&lt;color=&quot;green&quot;&gt;// Creates setting for requirement, must be serializable&lt;/color&gt;&#10;[&lt;color=&quot;orange&quot;&gt;SerializeField&lt;/color&gt;] &lt;color=&quot;orange&quot;&gt;private bool&lt;/color&gt; _targetState;&#10;&#10;&lt;color=&quot;orange&quot;&gt;protected override void&lt;/color&gt; OnInitialization()&#10;{&#10;    &lt;color=&quot;green&quot;&gt;// Sets the initial value to true&lt;/color&gt;&#10;    _targetState = true;&#10;}" display-tooltip-when-elided="true" style="white-space: normal; margin-top: 5px; background-color: rgb(37, 37, 37); width: 475px;" />
                <ui:Label text="Validate()" display-tooltip-when-elided="true" style="white-space: normal; -unity-font-style: bold; font-size: 14px; color: rgba(210, 210, 210, 0.59); margin-top: 15px;" />
                <ui:Label text="Validate is called whenever the validatableMonoBehaviour is validated. In the case of the sample the validation method will compare the current active state and the targeted state. If the active state is not the targeted state an error will be added and displayed on the validationStatus." display-tooltip-when-elided="true" style="white-space: normal; margin-top: 5px; width: 475px;" />
                <ui:Label text="&lt;color=&quot;orange&quot;&gt;protected override void&lt;/color&gt; Validate(&lt;color=&quot;purple&quot;&gt;GameObject&lt;/color&gt; gameObject)&#10;{&#10;    &lt;color=&quot;orange&quot;&gt;var&lt;/color&gt; isValid = gameObject.activeSelf == _targetState;&#10;&#x9;&#10;    &lt;color=&quot;orange&quot;&gt;if&lt;/color&gt; (isValid)&#10;        &lt;color=&quot;orange&quot;&gt;return&lt;/color&gt;;&#10;&#10;    &lt;color=&quot;orange&quot;&gt;var&lt;/color&gt; errorMessage = &lt;color=&quot;orange&quot;&gt;$&quot;GameObject should be {&lt;/color&gt;(_targetState ? &lt;color=&quot;orange&quot;&gt;&quot;active&quot;&lt;/color&gt; : &lt;color=&quot;orange&quot;&gt;inactive&lt;/color&gt;)&lt;color=&quot;orange&quot;&gt;}&lt;/color&gt;;&#10;&#10;    &lt;color=&quot;green&quot;&gt;AddError&lt;/color&gt;(&#10;        &lt;color=&quot;orange&quot;&gt;&quot;Incorrect active state&quot;&lt;/color&gt;,&#10;        errorMessage,&#10;        &lt;color=&quot;purple&quot;&gt;ValidationState&lt;/color&gt;.Warning,&#10;        &lt;color=&quot;green&gt;FixAction&lt;/color&gt;);&#10;}" display-tooltip-when-elided="true" style="white-space: normal; margin-top: 5px; background-color: rgb(37, 37, 37); width: 625px;" />
                <ui:Label text="When adding the error you need to provide an errorName, an errorMessage as well as a severity and a FixAction. If you provide a FixAction then the error can be automatically resolved after validation." display-tooltip-when-elided="true" style="white-space: normal; margin-top: 5px; width: 475px;" />
                <ui:Label text="FixAction()" display-tooltip-when-elided="true" style="white-space: normal; -unity-font-style: bold; font-size: 14px; color: rgba(210, 210, 210, 0.59); margin-top: 15px;" />
                <ui:Label text="The FixAction is executed when the validatableMonoBehaviour is given the command to fix the occured issue. In this example it is used to correct the current gameObject active state." display-tooltip-when-elided="true" style="white-space: normal; margin-top: 5px; width: 475px;" />
                <ui:Label text="&lt;color=&quot;orange&quot;&gt;private void&lt;/color&gt; FixAction(&lt;color=&quot;purple&quot;&gt;GameObject&lt;/color&gt; gameObject)&#10;{&#10;    gameObject.&lt;color=&quot;green&quot;&gt;SetActive&lt;/color&gt;(_targetState);&#10;}" display-tooltip-when-elided="true" style="white-space: normal; margin-top: 5px; background-color: rgb(37, 37, 37); width: 625px;" />
                <ui:Label text="Displaying the requirement" display-tooltip-when-elided="true" style="white-space: normal; -unity-font-style: bold; font-size: 14px; color: rgba(210, 210, 210, 0.59); margin-top: 15px;" />
                <ui:Label text="In order to display the created requirement in the dropdownMenu, the class must be serializable and contain the following attribute." display-tooltip-when-elided="true" style="white-space: normal; margin-top: 5px; width: 475px;" />
                <ui:Label text="[&lt;color=&quot;orange&quot;&gt;Serializable&lt;/color&gt;]&#10;[&lt;color=&quot;orange&quot;&gt;SerializeReferenceDropdownName&lt;/color&gt;(&lt;color=&quot;orange&quot;&gt;&quot;GameObject/Active&quot;&lt;/color&gt;, -10, 0)]&#10;&lt;color=&quot;orange&quot;&gt;public class&lt;/color&gt; Requirement : ScriptableValidationRequirement&#10;{" display-tooltip-when-elided="true" style="white-space: normal; margin-top: 5px; background-color: rgb(37, 37, 37); width: 625px;" />
                <ui:Label text="SerializeReferenceDropdownName takes two parameters, the first being the displayed name. This name can be sorted in categories by adding / between the categories and the name. The optional  second parameter is the order in which the requirement is displayed in. This is simillar to the MenuItem priority system. Each order param corresponds to the given category or requirement.&#10;&#10;In the above example the category &quot;GameObject&quot; would have a order of -10 and the requirement &quot;Active&quot; a order of 0 inside of the category." display-tooltip-when-elided="true" style="white-space: normal; margin-top: 5px; width: 475px;" />
                <ui:IMGUIContainer style="background-image: none; height: 2px; margin-left: 4px; margin-right: 4px; margin-top: 4px; margin-bottom: 4px; border-top-left-radius: 1px; border-bottom-left-radius: 1px; border-top-right-radius: 1px; border-bottom-right-radius: 1px; background-color: rgb(88, 88, 88);" />
            </ui:GroupBox>
        </ui:Foldout>
        <ui:Foldout text="Using toggleable settings&lt;color=&quot;orange&quot;&gt; [Code]" value="false" style="-unity-font-style: bold; color: rgb(210, 210, 210); font-size: 12px;">
            <ui:GroupBox style="margin-left: 0; margin-right: 0; margin-top: 5px; margin-bottom: 20px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; -unity-font-style: normal;">
                <ui:Label text="Toggleable settings are usefull if you want to add the possibility to enforce a specific property of a gameObject like for example the position. By creating a ToggleableSetting of type Vector3 instead of a normal Vector3 the developer can toggle the setting on and off and only if the setting is enabled the position would be enforced." display-tooltip-when-elided="true" style="white-space: normal;" />
                <ui:Label text="Collecting the toggle state and displaying the property is handled automatically, but the application of the toggle state must be implemented in the validation method." display-tooltip-when-elided="true" style="white-space: normal; margin-top: 15px;" />
                <ui:Label text="[&lt;color=&quot;orange&quot;&gt;SerializeField&lt;/color&gt;] &lt;color=&quot;orange&quot;&gt;private&lt;/color&gt; &lt;color=&quot;purple&quot;&gt;ToggleableSetting&lt;/color&gt;&lt;&lt;color=&quot;purple&gt;Vector3&lt;/color&gt;&gt; _position;&#10;&#10;&lt;color=&quot;orange&quot;&gt;protected override void&lt;/color&gt; Validate(&lt;color=&quot;purple&quot;&gt;GameObject&lt;/color&gt; gameObject)&#10;{&#10;    &lt;color=&quot;orange&quot;&gt;var&lt;/color&gt; isValid = true;&#10;    &#10;    &lt;color=&quot;orange&quot;&gt;if&lt;/color&gt; (_position.enabled &amp;&amp;&#10;        _position.value != gameObject.transform.position)&#10;        isValid = false;&#10;}" display-tooltip-when-elided="true" style="white-space: normal; margin-top: 5px; background-color: rgb(37, 37, 37); width: 475px;" />
                <ui:IMGUIContainer style="background-image: none; height: 2px; margin-left: 4px; margin-right: 4px; margin-top: 4px; margin-bottom: 4px; border-top-left-radius: 1px; border-bottom-left-radius: 1px; border-top-right-radius: 1px; border-bottom-right-radius: 1px; background-color: rgb(88, 88, 88);" />
            </ui:GroupBox>
        </ui:Foldout>
        <ui:Foldout text="Setup a validatable monobehaviour" value="false" style="-unity-font-style: bold; color: rgb(210, 210, 210); font-size: 12px; margin-top: 15px;">
            <ui:GroupBox style="margin-left: 0; margin-right: 0; margin-top: 5px; margin-bottom: 20px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; -unity-font-style: normal;">
                <ui:Label text="In order to use a ValidatableMonoBehaviour you first need to create one by code. You can find how to to so in the section above.&#10;&#10;After creating the ValidatableMonoBehaviour you simply need to add it to your GameObject. By doing so it will automatically add a ValidatableMonoBehaviourStatus this script will display any issues found with any ValidatableMonoBehaviour on this GameObject.&#10;&#10;To add validation logic to your behaviour, access the &quot;Requirements&quot; list and add a new entry. In the new entry choose the requirement you like to add to your behaviour and fill out any settings if needed." display-tooltip-when-elided="true" style="white-space: normal;" />
                <ui:IMGUIContainer style="background-image: none; height: 2px; margin-left: 4px; margin-right: 4px; margin-top: 4px; margin-bottom: 4px; border-top-left-radius: 1px; border-bottom-left-radius: 1px; border-top-right-radius: 1px; border-bottom-right-radius: 1px; background-color: rgb(88, 88, 88);" />
            </ui:GroupBox>
        </ui:Foldout>
        <ui:Foldout text="Export/Import requirements" value="false" style="-unity-font-style: bold; color: rgb(210, 210, 210); font-size: 12px;">
            <ui:GroupBox style="margin-left: 0; margin-right: 0; margin-top: 5px; margin-bottom: 20px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; -unity-font-style: normal;">
                <ui:Label text="In order to simpify the usage of requirements across multiple objects you can export and import settings directly on ValidatableMonoBehaviours. Exporting requirements of a ValidatableMonoBehaviour will create a ScriptableObject that contains all requirements and settings. This object can be edited and imported in other behaviours on different GameObjects and will update the requirements of these to the settings of the ScriptableObject.&#10;&#10;You can create importable settings by exporting existing requirements of any ValidatableMonoBehaviour or by creating one through Create/MegaPint/Validators/Validator Settings." display-tooltip-when-elided="true" style="white-space: normal;" />
                <ui:IMGUIContainer style="background-image: none; height: 2px; margin-left: 4px; margin-right: 4px; margin-top: 4px; margin-bottom: 4px; border-top-left-radius: 1px; border-bottom-left-radius: 1px; border-top-right-radius: 1px; border-bottom-right-radius: 1px; background-color: rgb(88, 88, 88);" />
            </ui:GroupBox>
        </ui:Foldout>
        <ui:Foldout text="Validate and fixing issues" value="false" style="-unity-font-style: bold; color: rgb(210, 210, 210); font-size: 12px;">
            <ui:GroupBox style="margin-left: 0; margin-right: 0; margin-top: 5px; margin-bottom: 20px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; -unity-font-style: normal;">
                <ui:Label text="All ValidatableMonoBehaviours are validated when the gameObject is validated. This process will then change the display of the ValidatableMonoBehaviourStatus. In addition the validation can be called manually by clicking the &quot;Validate&quot; button on the status script.&#10;&#10;If the validation found issues they will be displayed on the status script. You can choose to fix individual issues or press the &quot;Fix All&quot; button to fix all issues that contain an automatic fix.&#10;&#10;If an issue does not have an automatic fix the status script will not display the option and manual work is required." display-tooltip-when-elided="true" style="white-space: normal;" />
                <ui:IMGUIContainer style="background-image: none; height: 2px; margin-left: 4px; margin-right: 4px; margin-top: 4px; margin-bottom: 4px; border-top-left-radius: 1px; border-bottom-left-radius: 1px; border-top-right-radius: 1px; border-bottom-right-radius: 1px; background-color: rgb(88, 88, 88);" />
            </ui:GroupBox>
        </ui:Foldout>
    </ui:GroupBox>
    <ui:IMGUIContainer style="background-image: none; height: 2px; margin-left: 4px; margin-right: 4px; margin-top: 4px; margin-bottom: 4px; border-top-left-radius: 1px; border-bottom-left-radius: 1px; border-top-right-radius: 1px; border-bottom-right-radius: 1px; background-color: rgb(88, 88, 88);" />
    <ui:Label tabindex="-1" text="Predefined Requirements" parse-escape-sequences="true" display-tooltip-when-elided="true" style="margin-top: 5px; color: rgb(209, 0, 114); font-size: 16px; -unity-font-style: bold; -unity-font: resource(&apos;RobotoMono-VariableFont_wght&apos;); -unity-font-definition: initial; margin-left: 10px;" />
    <ui:GroupBox style="margin-left: 20px; margin-right: 0; margin-top: 0; margin-bottom: 0; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; -unity-font-definition: initial; -unity-font: resource(&apos;RobotoMono-VariableFont_wght&apos;);">
        <ui:Foldout text="What are requirements" value="false" style="-unity-font-style: bold; color: rgb(210, 210, 210); font-size: 12px;">
            <ui:GroupBox style="margin-left: 0; margin-right: 0; margin-top: 5px; margin-bottom: 20px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; -unity-font-style: normal;">
                <ui:Label text="Requirements are single purpose validations that can be added to a ValidatableMonoBehaviour to enforce certain settings on this behaviour.&#10;&#10;Requirements can be custom written to serve custom cases. How to create a requirement can be found in the section above." display-tooltip-when-elided="true" style="white-space: normal;" />
                <ui:IMGUIContainer style="background-image: none; height: 2px; margin-left: 4px; margin-right: 4px; margin-top: 4px; margin-bottom: 4px; border-top-left-radius: 1px; border-bottom-left-radius: 1px; border-top-right-radius: 1px; border-bottom-right-radius: 1px; background-color: rgb(88, 88, 88);" />
            </ui:GroupBox>
        </ui:Foldout>
        <ui:Foldout text="[Requirement] Component Order" value="false" style="-unity-font-style: bold; color: rgb(210, 210, 210); font-size: 12px;">
            <ui:GroupBox style="margin-left: 0; margin-right: 0; margin-top: 5px; margin-bottom: 20px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; -unity-font-style: normal;">
                <ui:Label text="The requirement &quot;Component Order&quot; is used to ensure the order of the components on the given GameObject. To function the requirement needs a ComponentOrderConfig which can be created by right clicking and choosing MegaPint/Validators/Component Order Config.&#10;&#10;Some entries of the config cannot be edited. All entries can be moved to the order in which they should be displayed on the GameObject." display-tooltip-when-elided="true" style="white-space: normal;" />
                <ui:Label text="Component Name" display-tooltip-when-elided="true" style="white-space: normal; -unity-font-style: bold; font-size: 14px; color: rgba(210, 210, 210, 0.59); margin-top: 15px;" />
                <ui:Label text="To set the order of one single script you need to click the plus sign on the bottom of the list and fill out the component name with the name of the wanted script." display-tooltip-when-elided="true" style="white-space: normal;" />
                <ui:Label text="Category: Non-Unity Components" display-tooltip-when-elided="true" style="white-space: normal; -unity-font-style: bold; font-size: 14px; color: rgba(210, 210, 210, 0.59); margin-top: 15px;" />
                <ui:Label text="In this category all scripts that are not in the unity namespace will be collected and displayed." display-tooltip-when-elided="true" style="white-space: normal;" />
                <ui:Label text="Category: Namespace Contains" display-tooltip-when-elided="true" style="white-space: normal; -unity-font-style: bold; font-size: 14px; color: rgba(210, 210, 210, 0.59); margin-top: 15px;" />
                <ui:Label text="This category collects all scripts that are in a namespace that contains the given string." display-tooltip-when-elided="true" style="white-space: normal;" />
                <ui:Label text="Category: Namespace Equals" display-tooltip-when-elided="true" style="white-space: normal; -unity-font-style: bold; font-size: 14px; color: rgba(210, 210, 210, 0.59); margin-top: 15px;" />
                <ui:Label text="Just like the category above this will collect all scripts that are in the given namespace." display-tooltip-when-elided="true" style="white-space: normal;" />
                <ui:Label text="Fill" display-tooltip-when-elided="true" style="white-space: normal; -unity-font-style: bold; font-size: 14px; color: rgba(210, 210, 210, 0.59); margin-top: 15px;" />
                <ui:Label text="All scripts that where not collected by any other entries will be moved to the fill category and displayed there." display-tooltip-when-elided="true" style="white-space: normal;" />
                <ui:IMGUIContainer style="background-image: none; height: 2px; margin-left: 4px; margin-right: 4px; margin-top: 4px; margin-bottom: 4px; border-top-left-radius: 1px; border-bottom-left-radius: 1px; border-top-right-radius: 1px; border-bottom-right-radius: 1px; background-color: rgb(88, 88, 88);" />
            </ui:GroupBox>
        </ui:Foldout>
    </ui:GroupBox>
    <ui:IMGUIContainer style="background-image: none; height: 2px; margin-left: 4px; margin-right: 4px; margin-top: 4px; margin-bottom: 4px; border-top-left-radius: 1px; border-bottom-left-radius: 1px; border-top-right-radius: 1px; border-bottom-right-radius: 1px; background-color: rgb(88, 88, 88);" />
    <ui:Label tabindex="-1" text="Additional Features" parse-escape-sequences="true" display-tooltip-when-elided="true" style="margin-top: 5px; color: rgb(209, 0, 114); font-size: 16px; -unity-font-style: bold; -unity-font: resource(&apos;RobotoMono-VariableFont_wght&apos;); -unity-font-definition: initial; margin-left: 10px;" />
    <ui:GroupBox style="margin-left: 20px; margin-right: 0; margin-top: 0; margin-bottom: 0; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; -unity-font: resource(&apos;RobotoMono-VariableFont_wght&apos;); -unity-font-definition: initial;">
        <ui:Foldout text="Validator View" value="false" style="-unity-font-style: bold; color: rgb(210, 210, 210); font-size: 12px;">
            <ui:GroupBox style="margin-left: 0; margin-right: 0; margin-top: 5px; margin-bottom: 20px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; -unity-font-style: normal;">
                <ui:Label text="The Validator View can be accessed via the info tab or the MenuItem MegaPint/Packages/Validators.&#10;&#10;This window collects all ValidatableMonoBehaviours and displays their current state. It can be used to quickly find any issues that occure on any ValidatableMonoBehaviour.&#10;&#10;You can choose to search the currently opened scene or the whole project where you could also specify certain locations in the project and narrow the search to this area.&#10;&#10;Found issues can also be fixed directly through the Validator View." display-tooltip-when-elided="true" style="white-space: normal;" />
                <ui:IMGUIContainer style="background-image: none; height: 2px; margin-left: 4px; margin-right: 4px; margin-top: 4px; margin-bottom: 4px; border-top-left-radius: 1px; border-bottom-left-radius: 1px; border-top-right-radius: 1px; border-bottom-right-radius: 1px; background-color: rgb(88, 88, 88);" />
            </ui:GroupBox>
        </ui:Foldout>
    </ui:GroupBox>
</ui:UXML>
